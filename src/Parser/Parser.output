Terminals unused in grammar

    AS


Grammar

    0 $accept: Program $end

    1 Program: Declaration
    2        | Program Declaration
    3        | Program END

    4 Declaration: ID COLON Expr SPLIT
    5            | ID EQ Expr SPLIT
    6            | ID BindList EQ Expr SPLIT

    7 Expr: LAMBDA BindList ARROW Expr
    8     | LEFT_PAREN ID COLON Expr RIGHT_PAREN ARROW Expr
    9     | AppExpr ARROW Expr
   10     | AppExpr

   11 AppExpr: UNIV LevelExpr
   12        | AppExpr AtomExpr
   13        | AtomExpr

   14 AtomExpr: LEVEL
   15         | ID
   16         | LEFT_PAREN Expr RIGHT_PAREN

   17 LevelExpr: LevelExpr PLUS LNAT
   18          | LevelExpr CUP LevelAtomExpr
   19          | LevelAtomExpr

   20 LevelAtomExpr: ID
   21              | LNAT
   22              | LEFT_PAREN LevelExpr RIGHT_PAREN

   23 BindList: ID
   24         | BindList ID


Terminals, with rules where they appear

    $end (0) 0
    error (256)
    ID <Id> (258) 4 5 6 8 15 20 23 24
    UNIV (259) 11
    LEVEL (260) 14
    ARROW (261) 7 8 9
    COLON (262) 4 8
    LEFT_PAREN (263) 8 16 22
    RIGHT_PAREN (264) 8 16 22
    LAMBDA (265) 7
    EQ (266) 5 6
    AS (267)
    CUP (268) 18
    PLUS (269) 17
    LNAT <MetaNat> (270) 17 21
    SPLIT (271) 4 5 6
    END (272) 3


Nonterminals, with rules where they appear

    $accept (18)
        on left: 0
    Program <UncheckedDecls> (19)
        on left: 1 2 3
        on right: 0 2 3
    Declaration <UncheckedPtr> (20)
        on left: 4 5 6
        on right: 1 2
    Expr <SyntaxPtr> (21)
        on left: 7 8 9 10
        on right: 4 5 6 7 8 9 16
    AppExpr <SyntaxPtr> (22)
        on left: 11 12 13
        on right: 9 10 12
    AtomExpr <SyntaxPtr> (23)
        on left: 14 15 16
        on right: 12 13
    LevelExpr <SyntaxPtr> (24)
        on left: 17 18 19
        on right: 11 17 18 22
    LevelAtomExpr <SyntaxPtr> (25)
        on left: 20 21 22
        on right: 18 19
    BindList <std::vector<Id>> (26)
        on left: 23 24
        on right: 6 7 24


State 0

    0 $accept: • Program $end

    ID  shift, and go to state 1

    Program      go to state 2
    Declaration  go to state 3


State 1

    4 Declaration: ID • COLON Expr SPLIT
    5            | ID • EQ Expr SPLIT
    6            | ID • BindList EQ Expr SPLIT

    ID     shift, and go to state 4
    COLON  shift, and go to state 5
    EQ     shift, and go to state 6

    BindList  go to state 7


State 2

    0 $accept: Program • $end
    2 Program: Program • Declaration
    3        | Program • END

    $end  shift, and go to state 8
    ID    shift, and go to state 1
    END   shift, and go to state 9

    Declaration  go to state 10


State 3

    1 Program: Declaration •

    $default  reduce using rule 1 (Program)


State 4

   23 BindList: ID •

    $default  reduce using rule 23 (BindList)


State 5

    4 Declaration: ID COLON • Expr SPLIT

    ID          shift, and go to state 11
    UNIV        shift, and go to state 12
    LEVEL       shift, and go to state 13
    LEFT_PAREN  shift, and go to state 14
    LAMBDA      shift, and go to state 15

    Expr      go to state 16
    AppExpr   go to state 17
    AtomExpr  go to state 18


State 6

    5 Declaration: ID EQ • Expr SPLIT

    ID          shift, and go to state 11
    UNIV        shift, and go to state 12
    LEVEL       shift, and go to state 13
    LEFT_PAREN  shift, and go to state 14
    LAMBDA      shift, and go to state 15

    Expr      go to state 19
    AppExpr   go to state 17
    AtomExpr  go to state 18


State 7

    6 Declaration: ID BindList • EQ Expr SPLIT
   24 BindList: BindList • ID

    ID  shift, and go to state 20
    EQ  shift, and go to state 21


State 8

    0 $accept: Program $end •

    $default  accept


State 9

    3 Program: Program END •

    $default  reduce using rule 3 (Program)


State 10

    2 Program: Program Declaration •

    $default  reduce using rule 2 (Program)


State 11

   15 AtomExpr: ID •

    $default  reduce using rule 15 (AtomExpr)


State 12

   11 AppExpr: UNIV • LevelExpr

    ID          shift, and go to state 22
    LEFT_PAREN  shift, and go to state 23
    LNAT        shift, and go to state 24

    LevelExpr      go to state 25
    LevelAtomExpr  go to state 26


State 13

   14 AtomExpr: LEVEL •

    $default  reduce using rule 14 (AtomExpr)


State 14

    8 Expr: LEFT_PAREN • ID COLON Expr RIGHT_PAREN ARROW Expr
   16 AtomExpr: LEFT_PAREN • Expr RIGHT_PAREN

    ID          shift, and go to state 27
    UNIV        shift, and go to state 12
    LEVEL       shift, and go to state 13
    LEFT_PAREN  shift, and go to state 14
    LAMBDA      shift, and go to state 15

    Expr      go to state 28
    AppExpr   go to state 17
    AtomExpr  go to state 18


State 15

    7 Expr: LAMBDA • BindList ARROW Expr

    ID  shift, and go to state 4

    BindList  go to state 29


State 16

    4 Declaration: ID COLON Expr • SPLIT

    SPLIT  shift, and go to state 30


State 17

    9 Expr: AppExpr • ARROW Expr
   10     | AppExpr •
   12 AppExpr: AppExpr • AtomExpr

    ID          shift, and go to state 11
    LEVEL       shift, and go to state 13
    ARROW       shift, and go to state 31
    LEFT_PAREN  shift, and go to state 32

    $default  reduce using rule 10 (Expr)

    AtomExpr  go to state 33


State 18

   13 AppExpr: AtomExpr •

    $default  reduce using rule 13 (AppExpr)


State 19

    5 Declaration: ID EQ Expr • SPLIT

    SPLIT  shift, and go to state 34


State 20

   24 BindList: BindList ID •

    $default  reduce using rule 24 (BindList)


State 21

    6 Declaration: ID BindList EQ • Expr SPLIT

    ID          shift, and go to state 11
    UNIV        shift, and go to state 12
    LEVEL       shift, and go to state 13
    LEFT_PAREN  shift, and go to state 14
    LAMBDA      shift, and go to state 15

    Expr      go to state 35
    AppExpr   go to state 17
    AtomExpr  go to state 18


State 22

   20 LevelAtomExpr: ID •

    $default  reduce using rule 20 (LevelAtomExpr)


State 23

   22 LevelAtomExpr: LEFT_PAREN • LevelExpr RIGHT_PAREN

    ID          shift, and go to state 22
    LEFT_PAREN  shift, and go to state 23
    LNAT        shift, and go to state 24

    LevelExpr      go to state 36
    LevelAtomExpr  go to state 26


State 24

   21 LevelAtomExpr: LNAT •

    $default  reduce using rule 21 (LevelAtomExpr)


State 25

   11 AppExpr: UNIV LevelExpr •
   17 LevelExpr: LevelExpr • PLUS LNAT
   18          | LevelExpr • CUP LevelAtomExpr

    CUP   shift, and go to state 37
    PLUS  shift, and go to state 38

    $default  reduce using rule 11 (AppExpr)


State 26

   19 LevelExpr: LevelAtomExpr •

    $default  reduce using rule 19 (LevelExpr)


State 27

    8 Expr: LEFT_PAREN ID • COLON Expr RIGHT_PAREN ARROW Expr
   15 AtomExpr: ID •

    COLON  shift, and go to state 39

    $default  reduce using rule 15 (AtomExpr)


State 28

   16 AtomExpr: LEFT_PAREN Expr • RIGHT_PAREN

    RIGHT_PAREN  shift, and go to state 40


State 29

    7 Expr: LAMBDA BindList • ARROW Expr
   24 BindList: BindList • ID

    ID     shift, and go to state 20
    ARROW  shift, and go to state 41


State 30

    4 Declaration: ID COLON Expr SPLIT •

    $default  reduce using rule 4 (Declaration)


State 31

    9 Expr: AppExpr ARROW • Expr

    ID          shift, and go to state 11
    UNIV        shift, and go to state 12
    LEVEL       shift, and go to state 13
    LEFT_PAREN  shift, and go to state 14
    LAMBDA      shift, and go to state 15

    Expr      go to state 42
    AppExpr   go to state 17
    AtomExpr  go to state 18


State 32

   16 AtomExpr: LEFT_PAREN • Expr RIGHT_PAREN

    ID          shift, and go to state 11
    UNIV        shift, and go to state 12
    LEVEL       shift, and go to state 13
    LEFT_PAREN  shift, and go to state 14
    LAMBDA      shift, and go to state 15

    Expr      go to state 28
    AppExpr   go to state 17
    AtomExpr  go to state 18


State 33

   12 AppExpr: AppExpr AtomExpr •

    $default  reduce using rule 12 (AppExpr)


State 34

    5 Declaration: ID EQ Expr SPLIT •

    $default  reduce using rule 5 (Declaration)


State 35

    6 Declaration: ID BindList EQ Expr • SPLIT

    SPLIT  shift, and go to state 43


State 36

   17 LevelExpr: LevelExpr • PLUS LNAT
   18          | LevelExpr • CUP LevelAtomExpr
   22 LevelAtomExpr: LEFT_PAREN LevelExpr • RIGHT_PAREN

    RIGHT_PAREN  shift, and go to state 44
    CUP          shift, and go to state 37
    PLUS         shift, and go to state 38


State 37

   18 LevelExpr: LevelExpr CUP • LevelAtomExpr

    ID          shift, and go to state 22
    LEFT_PAREN  shift, and go to state 23
    LNAT        shift, and go to state 24

    LevelAtomExpr  go to state 45


State 38

   17 LevelExpr: LevelExpr PLUS • LNAT

    LNAT  shift, and go to state 46


State 39

    8 Expr: LEFT_PAREN ID COLON • Expr RIGHT_PAREN ARROW Expr

    ID          shift, and go to state 11
    UNIV        shift, and go to state 12
    LEVEL       shift, and go to state 13
    LEFT_PAREN  shift, and go to state 14
    LAMBDA      shift, and go to state 15

    Expr      go to state 47
    AppExpr   go to state 17
    AtomExpr  go to state 18


State 40

   16 AtomExpr: LEFT_PAREN Expr RIGHT_PAREN •

    $default  reduce using rule 16 (AtomExpr)


State 41

    7 Expr: LAMBDA BindList ARROW • Expr

    ID          shift, and go to state 11
    UNIV        shift, and go to state 12
    LEVEL       shift, and go to state 13
    LEFT_PAREN  shift, and go to state 14
    LAMBDA      shift, and go to state 15

    Expr      go to state 48
    AppExpr   go to state 17
    AtomExpr  go to state 18


State 42

    9 Expr: AppExpr ARROW Expr •

    $default  reduce using rule 9 (Expr)


State 43

    6 Declaration: ID BindList EQ Expr SPLIT •

    $default  reduce using rule 6 (Declaration)


State 44

   22 LevelAtomExpr: LEFT_PAREN LevelExpr RIGHT_PAREN •

    $default  reduce using rule 22 (LevelAtomExpr)


State 45

   18 LevelExpr: LevelExpr CUP LevelAtomExpr •

    $default  reduce using rule 18 (LevelExpr)


State 46

   17 LevelExpr: LevelExpr PLUS LNAT •

    $default  reduce using rule 17 (LevelExpr)


State 47

    8 Expr: LEFT_PAREN ID COLON Expr • RIGHT_PAREN ARROW Expr

    RIGHT_PAREN  shift, and go to state 49


State 48

    7 Expr: LAMBDA BindList ARROW Expr •

    $default  reduce using rule 7 (Expr)


State 49

    8 Expr: LEFT_PAREN ID COLON Expr RIGHT_PAREN • ARROW Expr

    ARROW  shift, and go to state 50


State 50

    8 Expr: LEFT_PAREN ID COLON Expr RIGHT_PAREN ARROW • Expr

    ID          shift, and go to state 11
    UNIV        shift, and go to state 12
    LEVEL       shift, and go to state 13
    LEFT_PAREN  shift, and go to state 14
    LAMBDA      shift, and go to state 15

    Expr      go to state 51
    AppExpr   go to state 17
    AtomExpr  go to state 18


State 51

    8 Expr: LEFT_PAREN ID COLON Expr RIGHT_PAREN ARROW Expr •

    $default  reduce using rule 8 (Expr)
