Terminals unused in grammar

    AS


Grammar

    0 $accept: Program $end

    1 Program: Declaration
    2        | Program Declaration
    3        | Program END

    4 Declaration: ID COLON Expr SPLIT
    5            | ID EQ Expr SPLIT
    6            | ID BindList EQ Expr SPLIT

    7 Expr: LAMBDA BindList ARROW Expr
    8     | LEFT_PAREN ID COLON Expr RIGHT_PAREN ARROW Expr
    9     | AppExpr ARROW Expr
   10     | AppExpr

   11 AppExpr: UNIV AtomExpr
   12        | AtomExpr PLUS LNAT
   13        | AppExpr CUP AtomExpr
   14        | AppExpr AtomExpr
   15        | AtomExpr

   16 AtomExpr: LEVEL
   17         | ID
   18         | LNAT
   19         | LEFT_PAREN Expr RIGHT_PAREN

   20 BindList: ID
   21         | BindList ID


Terminals, with rules where they appear

    $end (0) 0
    error (256)
    ID <Id> (258) 4 5 6 8 17 20 21
    UNIV (259) 11
    LEVEL (260) 16
    ARROW (261) 7 8 9
    COLON (262) 4 8
    LEFT_PAREN (263) 8 19
    RIGHT_PAREN (264) 8 19
    LAMBDA (265) 7
    EQ (266) 5 6
    AS (267)
    CUP (268) 13
    PLUS (269) 12
    LNAT <MetaNat> (270) 12 18
    SPLIT (271) 4 5 6
    END (272) 3


Nonterminals, with rules where they appear

    $accept (18)
        on left: 0
    Program <UncheckedDecls> (19)
        on left: 1 2 3
        on right: 0 2 3
    Declaration <UncheckedPtr> (20)
        on left: 4 5 6
        on right: 1 2
    Expr <SyntaxPtr> (21)
        on left: 7 8 9 10
        on right: 4 5 6 7 8 9 19
    AppExpr <SyntaxPtr> (22)
        on left: 11 12 13 14 15
        on right: 9 10 13 14
    AtomExpr <SyntaxPtr> (23)
        on left: 16 17 18 19
        on right: 11 12 13 14 15
    BindList <std::vector<Id>> (24)
        on left: 20 21
        on right: 6 7 21


State 0

    0 $accept: • Program $end

    ID  shift, and go to state 1

    Program      go to state 2
    Declaration  go to state 3


State 1

    4 Declaration: ID • COLON Expr SPLIT
    5            | ID • EQ Expr SPLIT
    6            | ID • BindList EQ Expr SPLIT

    ID     shift, and go to state 4
    COLON  shift, and go to state 5
    EQ     shift, and go to state 6

    BindList  go to state 7


State 2

    0 $accept: Program • $end
    2 Program: Program • Declaration
    3        | Program • END

    $end  shift, and go to state 8
    ID    shift, and go to state 1
    END   shift, and go to state 9

    Declaration  go to state 10


State 3

    1 Program: Declaration •

    $default  reduce using rule 1 (Program)


State 4

   20 BindList: ID •

    $default  reduce using rule 20 (BindList)


State 5

    4 Declaration: ID COLON • Expr SPLIT

    ID          shift, and go to state 11
    UNIV        shift, and go to state 12
    LEVEL       shift, and go to state 13
    LEFT_PAREN  shift, and go to state 14
    LAMBDA      shift, and go to state 15
    LNAT        shift, and go to state 16

    Expr      go to state 17
    AppExpr   go to state 18
    AtomExpr  go to state 19


State 6

    5 Declaration: ID EQ • Expr SPLIT

    ID          shift, and go to state 11
    UNIV        shift, and go to state 12
    LEVEL       shift, and go to state 13
    LEFT_PAREN  shift, and go to state 14
    LAMBDA      shift, and go to state 15
    LNAT        shift, and go to state 16

    Expr      go to state 20
    AppExpr   go to state 18
    AtomExpr  go to state 19


State 7

    6 Declaration: ID BindList • EQ Expr SPLIT
   21 BindList: BindList • ID

    ID  shift, and go to state 21
    EQ  shift, and go to state 22


State 8

    0 $accept: Program $end •

    $default  accept


State 9

    3 Program: Program END •

    $default  reduce using rule 3 (Program)


State 10

    2 Program: Program Declaration •

    $default  reduce using rule 2 (Program)


State 11

   17 AtomExpr: ID •

    $default  reduce using rule 17 (AtomExpr)


State 12

   11 AppExpr: UNIV • AtomExpr

    ID          shift, and go to state 11
    LEVEL       shift, and go to state 13
    LEFT_PAREN  shift, and go to state 23
    LNAT        shift, and go to state 16

    AtomExpr  go to state 24


State 13

   16 AtomExpr: LEVEL •

    $default  reduce using rule 16 (AtomExpr)


State 14

    8 Expr: LEFT_PAREN • ID COLON Expr RIGHT_PAREN ARROW Expr
   19 AtomExpr: LEFT_PAREN • Expr RIGHT_PAREN

    ID          shift, and go to state 25
    UNIV        shift, and go to state 12
    LEVEL       shift, and go to state 13
    LEFT_PAREN  shift, and go to state 14
    LAMBDA      shift, and go to state 15
    LNAT        shift, and go to state 16

    Expr      go to state 26
    AppExpr   go to state 18
    AtomExpr  go to state 19


State 15

    7 Expr: LAMBDA • BindList ARROW Expr

    ID  shift, and go to state 4

    BindList  go to state 27


State 16

   18 AtomExpr: LNAT •

    $default  reduce using rule 18 (AtomExpr)


State 17

    4 Declaration: ID COLON Expr • SPLIT

    SPLIT  shift, and go to state 28


State 18

    9 Expr: AppExpr • ARROW Expr
   10     | AppExpr •
   13 AppExpr: AppExpr • CUP AtomExpr
   14        | AppExpr • AtomExpr

    ID          shift, and go to state 11
    LEVEL       shift, and go to state 13
    ARROW       shift, and go to state 29
    LEFT_PAREN  shift, and go to state 23
    CUP         shift, and go to state 30
    LNAT        shift, and go to state 16

    $default  reduce using rule 10 (Expr)

    AtomExpr  go to state 31


State 19

   12 AppExpr: AtomExpr • PLUS LNAT
   15        | AtomExpr •

    PLUS  shift, and go to state 32

    $default  reduce using rule 15 (AppExpr)


State 20

    5 Declaration: ID EQ Expr • SPLIT

    SPLIT  shift, and go to state 33


State 21

   21 BindList: BindList ID •

    $default  reduce using rule 21 (BindList)


State 22

    6 Declaration: ID BindList EQ • Expr SPLIT

    ID          shift, and go to state 11
    UNIV        shift, and go to state 12
    LEVEL       shift, and go to state 13
    LEFT_PAREN  shift, and go to state 14
    LAMBDA      shift, and go to state 15
    LNAT        shift, and go to state 16

    Expr      go to state 34
    AppExpr   go to state 18
    AtomExpr  go to state 19


State 23

   19 AtomExpr: LEFT_PAREN • Expr RIGHT_PAREN

    ID          shift, and go to state 11
    UNIV        shift, and go to state 12
    LEVEL       shift, and go to state 13
    LEFT_PAREN  shift, and go to state 14
    LAMBDA      shift, and go to state 15
    LNAT        shift, and go to state 16

    Expr      go to state 26
    AppExpr   go to state 18
    AtomExpr  go to state 19


State 24

   11 AppExpr: UNIV AtomExpr •

    $default  reduce using rule 11 (AppExpr)


State 25

    8 Expr: LEFT_PAREN ID • COLON Expr RIGHT_PAREN ARROW Expr
   17 AtomExpr: ID •

    COLON  shift, and go to state 35

    $default  reduce using rule 17 (AtomExpr)


State 26

   19 AtomExpr: LEFT_PAREN Expr • RIGHT_PAREN

    RIGHT_PAREN  shift, and go to state 36


State 27

    7 Expr: LAMBDA BindList • ARROW Expr
   21 BindList: BindList • ID

    ID     shift, and go to state 21
    ARROW  shift, and go to state 37


State 28

    4 Declaration: ID COLON Expr SPLIT •

    $default  reduce using rule 4 (Declaration)


State 29

    9 Expr: AppExpr ARROW • Expr

    ID          shift, and go to state 11
    UNIV        shift, and go to state 12
    LEVEL       shift, and go to state 13
    LEFT_PAREN  shift, and go to state 14
    LAMBDA      shift, and go to state 15
    LNAT        shift, and go to state 16

    Expr      go to state 38
    AppExpr   go to state 18
    AtomExpr  go to state 19


State 30

   13 AppExpr: AppExpr CUP • AtomExpr

    ID          shift, and go to state 11
    LEVEL       shift, and go to state 13
    LEFT_PAREN  shift, and go to state 23
    LNAT        shift, and go to state 16

    AtomExpr  go to state 39


State 31

   14 AppExpr: AppExpr AtomExpr •

    $default  reduce using rule 14 (AppExpr)


State 32

   12 AppExpr: AtomExpr PLUS • LNAT

    LNAT  shift, and go to state 40


State 33

    5 Declaration: ID EQ Expr SPLIT •

    $default  reduce using rule 5 (Declaration)


State 34

    6 Declaration: ID BindList EQ Expr • SPLIT

    SPLIT  shift, and go to state 41


State 35

    8 Expr: LEFT_PAREN ID COLON • Expr RIGHT_PAREN ARROW Expr

    ID          shift, and go to state 11
    UNIV        shift, and go to state 12
    LEVEL       shift, and go to state 13
    LEFT_PAREN  shift, and go to state 14
    LAMBDA      shift, and go to state 15
    LNAT        shift, and go to state 16

    Expr      go to state 42
    AppExpr   go to state 18
    AtomExpr  go to state 19


State 36

   19 AtomExpr: LEFT_PAREN Expr RIGHT_PAREN •

    $default  reduce using rule 19 (AtomExpr)


State 37

    7 Expr: LAMBDA BindList ARROW • Expr

    ID          shift, and go to state 11
    UNIV        shift, and go to state 12
    LEVEL       shift, and go to state 13
    LEFT_PAREN  shift, and go to state 14
    LAMBDA      shift, and go to state 15
    LNAT        shift, and go to state 16

    Expr      go to state 43
    AppExpr   go to state 18
    AtomExpr  go to state 19


State 38

    9 Expr: AppExpr ARROW Expr •

    $default  reduce using rule 9 (Expr)


State 39

   13 AppExpr: AppExpr CUP AtomExpr •

    $default  reduce using rule 13 (AppExpr)


State 40

   12 AppExpr: AtomExpr PLUS LNAT •

    $default  reduce using rule 12 (AppExpr)


State 41

    6 Declaration: ID BindList EQ Expr SPLIT •

    $default  reduce using rule 6 (Declaration)


State 42

    8 Expr: LEFT_PAREN ID COLON Expr • RIGHT_PAREN ARROW Expr

    RIGHT_PAREN  shift, and go to state 44


State 43

    7 Expr: LAMBDA BindList ARROW Expr •

    $default  reduce using rule 7 (Expr)


State 44

    8 Expr: LEFT_PAREN ID COLON Expr RIGHT_PAREN • ARROW Expr

    ARROW  shift, and go to state 45


State 45

    8 Expr: LEFT_PAREN ID COLON Expr RIGHT_PAREN ARROW • Expr

    ID          shift, and go to state 11
    UNIV        shift, and go to state 12
    LEVEL       shift, and go to state 13
    LEFT_PAREN  shift, and go to state 14
    LAMBDA      shift, and go to state 15
    LNAT        shift, and go to state 16

    Expr      go to state 46
    AppExpr   go to state 18
    AtomExpr  go to state 19


State 46

    8 Expr: LEFT_PAREN ID COLON Expr RIGHT_PAREN ARROW Expr •

    $default  reduce using rule 8 (Expr)
